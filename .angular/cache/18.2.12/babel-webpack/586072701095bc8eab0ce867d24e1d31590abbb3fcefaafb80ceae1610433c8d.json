{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jose/Desktop/Entregable_3_clean-f74757819f7f6b4c39391c8f8c895bd82e53ce10/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BarcodeScanner } from 'capacitor-barcode-scanner';\nimport { Browser } from '@capacitor/browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ionic/angular\";\nfunction CodigoQrPage_ion_accordion_group_9_ion_accordion_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-accordion\")(1, \"ion-item\", 4)(2, \"ion-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const key_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(key_r1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.datosQR[key_r1]);\n  }\n}\nfunction CodigoQrPage_ion_accordion_group_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-accordion-group\");\n    i0.ɵɵtemplate(1, CodigoQrPage_ion_accordion_group_9_ion_accordion_1_Template, 7, 2, \"ion-accordion\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getKeys(ctx_r1.datosQR));\n  }\n}\nexport class CodigoQrPage {\n  constructor() {\n    this.textoEscaneado = ''; // Contenido del código QR\n    this.mensaje = ''; // Mensajes para el usuario\n    this.datosQR = {}; // JSON extraído del contenido del QR\n  }\n  // Método para obtener las claves del JSON\n  getKeys(obj) {\n    return Object.keys(obj);\n  }\n  escanear() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const resultado = yield BarcodeScanner.scan();\n        console.log('Resultado del escaneo:', resultado);\n        if (resultado && resultado.hasOwnProperty('code')) {\n          _this.textoEscaneado = resultado.code;\n          console.log('Contenido del QR:', _this.textoEscaneado);\n          try {\n            _this.datosQR = JSON.parse(_this.textoEscaneado);\n            _this.mensaje = 'QR escaneado y datos extraídos correctamente.';\n            console.log('Datos extraídos:', _this.datosQR);\n          } catch (error) {\n            console.error('El contenido no es un JSON válido:', error);\n            _this.mensaje = 'El contenido escaneado no es un JSON válido.';\n            _this.datosQR = {}; // Limpiar datos en caso de error\n          }\n          if (_this.textoEscaneado.startsWith('https')) {\n            yield Browser.open({\n              url: _this.textoEscaneado\n            });\n          }\n        } else {\n          _this.mensaje = 'No se detectó contenido en el QR.';\n        }\n      } catch (error) {\n        console.error('Error durante el escaneo:', error);\n        _this.mensaje = 'Ocurrió un error durante el escaneo.';\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function CodigoQrPage_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CodigoQrPage)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CodigoQrPage,\n      selectors: [[\"app-codigo-qr\"]],\n      decls: 10,\n      vars: 2,\n      consts: [[1, \"ion-padding\"], [\"expand\", \"block\", 3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"slot\", \"header\"], [\"slot\", \"content\"]],\n      template: function CodigoQrPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n          i0.ɵɵtext(3, \"Esc\\u00E1ner QR\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(4, \"ion-content\", 0)(5, \"ion-button\", 1);\n          i0.ɵɵlistener(\"click\", function CodigoQrPage_Template_ion_button_click_5_listener() {\n            return ctx.escanear();\n          });\n          i0.ɵɵtext(6, \"Escanear QR\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"p\");\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, CodigoQrPage_ion_accordion_group_9_Template, 2, 1, \"ion-accordion-group\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.mensaje);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.datosQR && ctx.getKeys(ctx.datosQR).length > 0);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i2.IonAccordion, i2.IonAccordionGroup, i2.IonButton, i2.IonContent, i2.IonHeader, i2.IonItem, i2.IonLabel, i2.IonTitle, i2.IonToolbar],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["BarcodeScanner","Browser","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","key_r1","ctx_r1","datosQR","ɵɵtemplate","CodigoQrPage_ion_accordion_group_9_ion_accordion_1_Template","ɵɵproperty","getKeys","CodigoQrPage","constructor","textoEscaneado","mensaje","obj","Object","keys","escanear","_this","_asyncToGenerator","resultado","scan","console","log","hasOwnProperty","code","JSON","parse","error","startsWith","open","url","selectors","decls","vars","consts","template","CodigoQrPage_Template","rf","ctx","ɵɵlistener","CodigoQrPage_Template_ion_button_click_5_listener","CodigoQrPage_ion_accordion_group_9_Template","length"],"sources":["C:\\Users\\jose\\Desktop\\Entregable_3_clean-f74757819f7f6b4c39391c8f8c895bd82e53ce10\\src\\app\\codigo-qr\\codigo-qr.page.ts","C:\\Users\\jose\\Desktop\\Entregable_3_clean-f74757819f7f6b4c39391c8f8c895bd82e53ce10\\src\\app\\codigo-qr\\codigo-qr.page.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { BarcodeScanner } from 'capacitor-barcode-scanner';\r\nimport { Browser } from '@capacitor/browser';\r\n\r\n@Component({\r\n  selector: 'app-codigo-qr', // Cambiado el selector\r\n  templateUrl: './codigo-qr.page.html', // Cambiado el nombre del archivo HTML\r\n  styleUrls: ['./codigo-qr.page.scss'], // Cambiado el nombre del archivo SCSS\r\n})\r\nexport class CodigoQrPage { // Cambiado el nombre de la clase\r\n  textoEscaneado: string = ''; // Contenido del código QR\r\n  mensaje: string = ''; // Mensajes para el usuario\r\n  datosQR: any = {}; // JSON extraído del contenido del QR\r\n\r\n  constructor() {}\r\n\r\n  // Método para obtener las claves del JSON\r\n  getKeys(obj: any): string[] {\r\n    return Object.keys(obj);\r\n  }\r\n\r\n  async escanear() {\r\n    try {\r\n      const resultado: any = await BarcodeScanner.scan();\r\n      console.log('Resultado del escaneo:', resultado);\r\n\r\n      if (resultado && resultado.hasOwnProperty('code')) {\r\n        this.textoEscaneado = resultado.code;\r\n        console.log('Contenido del QR:', this.textoEscaneado);\r\n\r\n        try {\r\n          this.datosQR = JSON.parse(this.textoEscaneado);\r\n          this.mensaje = 'QR escaneado y datos extraídos correctamente.';\r\n          console.log('Datos extraídos:', this.datosQR);\r\n        } catch (error) {\r\n          console.error('El contenido no es un JSON válido:', error);\r\n          this.mensaje = 'El contenido escaneado no es un JSON válido.';\r\n          this.datosQR = {}; // Limpiar datos en caso de error\r\n        }\r\n\r\n        if (this.textoEscaneado.startsWith('https')) {\r\n          await Browser.open({ url: this.textoEscaneado });\r\n        }\r\n      } else {\r\n        this.mensaje = 'No se detectó contenido en el QR.';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error durante el escaneo:', error);\r\n      this.mensaje = 'Ocurrió un error durante el escaneo.';\r\n    }\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Escáner QR</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"ion-padding\">\r\n  <ion-button expand=\"block\" (click)=\"escanear()\">Escanear QR</ion-button>\r\n  <p>{{ mensaje }}</p>\r\n\r\n  <!-- Acordeón para mostrar las propiedades del JSON -->\r\n  <ion-accordion-group *ngIf=\"datosQR && getKeys(datosQR).length > 0\">\r\n    <ion-accordion *ngFor=\"let key of getKeys(datosQR)\">\r\n      <ion-item slot=\"header\">\r\n        <ion-label>{{ key }}</ion-label>\r\n      </ion-item>\r\n      <div slot=\"content\">\r\n        <p>{{ datosQR[key] }}</p>\r\n      </div>\r\n    </ion-accordion>\r\n  </ion-accordion-group>\r\n</ion-content>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}