{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jose/Desktop/Entregable_3_clean-f74757819f7f6b4c39391c8f8c895bd82e53ce10/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BarcodeScanner } from 'capacitor-barcode-scanner';\nimport { Browser } from '@capacitor/browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ionic/angular\";\nfunction CodigoQrPage_ion_accordion_group_9_ion_accordion_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-accordion\")(1, \"ion-item\", 4)(2, \"ion-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const key_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(key_r1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.datosQR[key_r1]);\n  }\n}\nfunction CodigoQrPage_ion_accordion_group_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-accordion-group\");\n    i0.ɵɵtemplate(1, CodigoQrPage_ion_accordion_group_9_ion_accordion_1_Template, 7, 2, \"ion-accordion\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getKeys(ctx_r1.datosQR));\n  }\n}\nexport let CodigoQrPage = /*#__PURE__*/(() => {\n  class CodigoQrPage {\n    constructor() {\n      this.textoEscaneado = ''; // Contenido del código QR\n      this.mensaje = ''; // Mensajes para el usuario\n      this.datosQR = {}; // JSON extraído del contenido del QR\n    }\n    // Método para obtener las claves del JSON\n    getKeys(obj) {\n      return Object.keys(obj);\n    }\n    escanear() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const resultado = yield BarcodeScanner.scan();\n          console.log('Resultado del escaneo:', resultado);\n          if (resultado && resultado.hasOwnProperty('code')) {\n            _this.textoEscaneado = resultado.code;\n            console.log('Contenido del QR:', _this.textoEscaneado);\n            try {\n              _this.datosQR = JSON.parse(_this.textoEscaneado);\n              _this.mensaje = 'QR escaneado y datos extraídos correctamente.';\n              console.log('Datos extraídos:', _this.datosQR);\n            } catch (error) {\n              console.error('El contenido no es un JSON válido:', error);\n              _this.mensaje = 'El contenido escaneado no es un JSON válido.';\n              _this.datosQR = {}; // Limpiar datos en caso de error\n            }\n            if (_this.textoEscaneado.startsWith('https')) {\n              yield Browser.open({\n                url: _this.textoEscaneado\n              });\n            }\n          } else {\n            _this.mensaje = 'No se detectó contenido en el QR.';\n          }\n        } catch (error) {\n          console.error('Error durante el escaneo:', error);\n          _this.mensaje = 'Ocurrió un error durante el escaneo.';\n        }\n      })();\n    }\n    static {\n      this.ɵfac = function CodigoQrPage_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CodigoQrPage)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CodigoQrPage,\n        selectors: [[\"app-codigo-qr\"]],\n        decls: 10,\n        vars: 2,\n        consts: [[1, \"ion-padding\"], [\"expand\", \"block\", 3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"slot\", \"header\"], [\"slot\", \"content\"]],\n        template: function CodigoQrPage_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n            i0.ɵɵtext(3, \"Esc\\u00E1ner QR\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(4, \"ion-content\", 0)(5, \"ion-button\", 1);\n            i0.ɵɵlistener(\"click\", function CodigoQrPage_Template_ion_button_click_5_listener() {\n              return ctx.escanear();\n            });\n            i0.ɵɵtext(6, \"Escanear QR\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"p\");\n            i0.ɵɵtext(8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(9, CodigoQrPage_ion_accordion_group_9_Template, 2, 1, \"ion-accordion-group\", 2);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(8);\n            i0.ɵɵtextInterpolate(ctx.mensaje);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.datosQR && ctx.getKeys(ctx.datosQR).length > 0);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, i2.IonAccordion, i2.IonAccordionGroup, i2.IonButton, i2.IonContent, i2.IonHeader, i2.IonItem, i2.IonLabel, i2.IonTitle, i2.IonToolbar]\n      });\n    }\n  }\n  return CodigoQrPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}